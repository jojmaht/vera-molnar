{"version":3,"sources":["App.js","index.js"],"names":["App","style","width","maxWidth","height","paddingBottom","position","top","bottom","left","transform","inset","maxHeight","display","flexWrap","Array","from","length","map","item","index","viewboxSize","coords","spacing","pointsLength","Math","max","floor","random","points","i","push","point","distanceX","abs","distanceY","sqrt","pow","getRandomPoints","padding","textAlign","flexGrow","viewBox","overflow","join","fill","stroke","strokeWidth","strokeLinecap","strokeDasharray","strokeDashoffset","animationDelay","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MA0GeA,MAjEf,WACE,OACE,8BACE,qBACEC,MAAO,CACLC,MAAO,OACPC,SAAU,QACVC,OAAQ,EACRC,cAAe,OACfC,SAAU,WACVC,IAAK,EACLC,OAAQ,EACRC,KAAM,MACNC,UAAW,oBAVf,SAaE,qBACET,MAAO,CACLK,SAAU,WACVK,MAAO,EACPT,MAAO,OACPE,OAAQ,OACRQ,UAAW,QACXC,QAAS,OACTC,SAAU,QARd,SAWGC,MAAMC,KAAK,CAAEC,OAAQ,MAAOC,KAAI,SAACC,EAAMC,GACtC,MAnEY,SAACC,GAsBvB,IArBA,IAAMC,EAAS,CACb,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEAC,EAAUF,EAAc,EACxBG,EAAeC,KAAKC,IAAI,EAAGD,KAAKE,MAAsB,GAAhBF,KAAKG,WAC7CC,EAAS,GACJC,EAAI,EAAGA,GAAKN,EAAcM,IACjCD,EAAOE,KACLT,EAAOG,KAAKE,MAAMF,KAAKG,SAAWN,EAAOL,SAASC,KAChD,SAACc,GAAD,OAAWA,EAAQT,MAKzB,IADA,IAAIN,EAAS,EACJa,EAAI,EAAGA,EAAID,EAAOZ,OAAS,EAAGa,IAAK,CAC1C,IAAMG,EAAYR,KAAKS,IAAIL,EAAOC,GAAG,GAAKD,EAAOC,EAAI,GAAG,IAClDK,EAAYV,KAAKS,IAAIL,EAAOC,GAAG,GAAKD,EAAOC,EAAI,GAAG,IACxDb,GAAUQ,KAAKW,KAAKX,KAAKY,IAAIJ,EAAW,GAAKR,KAAKY,IAAIF,EAAW,IAGnE,MAAO,CAAEN,SAAQZ,UA+BoBqB,CAAgB,IAAnCT,EAAR,EAAQA,OAAQZ,EAAhB,EAAgBA,OAChB,OACE,qBACEhB,MAAO,CACLC,MAAO,MACPE,OAAQ,MACRmC,QAAS,MACTC,UAAW,SACXC,SAAU,GANd,SASE,qBACEC,QAAQ,YACRzC,MAAO,CACL0C,SAAU,WAHd,SAME,0BACEd,OAAQA,EAAOX,KAAI,+CAAgB,IAAhB,QAAyB0B,KAAK,KACjDC,KAAK,OACLC,OAAO,UACPC,YAAa,EACbC,cAAc,QACdC,gBAAiBhC,EACjBiC,iBAAkBjC,EAClBhB,MAAO,CAAEkD,eAAe,GAAD,OAAK/B,EAAQ,IAAb,sBCzF3CgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.cb253f6f.chunk.js","sourcesContent":["import \"./App.css\";\n\nconst getRandomPoints = (viewboxSize) => {\n  const coords = [\n    [0, 0],\n    [1, 0],\n    [2, 0],\n    [3, 0],\n    [0, 1],\n    [1, 1],\n    [2, 1],\n    [3, 1],\n    [0, 2],\n    [1, 2],\n    [2, 2],\n    [3, 2],\n    [0, 3],\n    [1, 3],\n    [2, 3],\n    [3, 3],\n  ];\n  const spacing = viewboxSize / 3;\n  const pointsLength = Math.max(9, Math.floor(Math.random() * 16));\n  let points = [];\n  for (let i = 1; i <= pointsLength; i++) {\n    points.push(\n      coords[Math.floor(Math.random() * coords.length)].map(\n        (point) => point * spacing\n      )\n    );\n  }\n  let length = 0;\n  for (var i = 0; i < points.length - 1; i++) {\n    const distanceX = Math.abs(points[i][0] - points[i + 1][0]);\n    const distanceY = Math.abs(points[i][1] - points[i + 1][1]);\n    length += Math.sqrt(Math.pow(distanceX, 2) + Math.pow(distanceY, 2));\n  }\n\n  return { points, length };\n};\n\nfunction App() {\n  return (\n    <div>\n      <div\n        style={{\n          width: \"100%\",\n          maxWidth: \"100vh\",\n          height: 0,\n          paddingBottom: \"100%\",\n          position: \"absolute\",\n          top: 0,\n          bottom: 0,\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n        }}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            inset: 0,\n            width: \"100%\",\n            height: \"100%\",\n            maxHeight: \"100vh\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n          }}\n        >\n          {Array.from({ length: 100 }).map((item, index) => {\n            const { points, length } = getRandomPoints(80);\n            return (\n              <div\n                style={{\n                  width: \"10%\",\n                  height: \"10%\",\n                  padding: \"8px\",\n                  textAlign: \"center\",\n                  flexGrow: 0,\n                }}\n              >\n                <svg\n                  viewBox=\"0 0 80 80\"\n                  style={{\n                    overflow: \"visible\",\n                  }}\n                >\n                  <polyline\n                    points={points.map(([x, y]) => x + \",\" + y).join(\" \")}\n                    fill=\"none\"\n                    stroke=\"#cf3b3d\"\n                    strokeWidth={3}\n                    strokeLinecap=\"round\"\n                    strokeDasharray={length}\n                    strokeDashoffset={length}\n                    style={{ animationDelay: `${index / 100}s` }}\n                  />\n                </svg>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}